version: 2.1
orbs:
  node: circleci/node@3.0.0
  deploy-to-heroku: rise/deploy-to-heroku@0.0.6

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: cordobacesar/taller2airbnb
      HEROKU_LOGIN: cordobacesar
      HEROKU_API_KEY: 4d54c6c2-4015-4cf0-bb03-6bca051b42f4

    docker:
      - image: circleci/node:12

jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run: npm install
      - run:
          name: "Run Jest and Collect Coverage Reports"
          command: jest --collectCoverage=true
      - store_artifacts:
          path: coverage
      - run:
          name: Build Docker image
          
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo ${DOCKERHUB_PASS} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
            docker push $IMAGE_NAME:latest
  deploy:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies- # fallback to using the latest cache if no exact match is found
      - run:
          name: "Install Heroku CLI, if necessary"
          command: |
            if [[ $(command -v heroku) == "" ]]; then
              curl https://cli-assets.heroku.com/install.sh | sh
            else
              echo "Heroku is already installed. No operation was performed."
            fi
      - run:
          name: Login into Heroku Docker Repository
          command: |
            docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com
      - run:
          name: Deploy Heroku Docker Container
          command: |
            heroku container:push web -a taller2airbnb-businesscore
            heroku container:release web -a taller2airbnb-businesscore

workflows:
  version: 2
  node-tests:
    jobs:
      - node/test
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: main
      - publish:
          requires:
            - build
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - publish
          filters:
            branches:
              only: main